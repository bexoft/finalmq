syntax = "proto3";


<%
var namespace = null;
if (data.namespace)
{
    data.namespace.trim();
    if (data.namespace.length > 0)
    {
        namespace = data.namespace
    }
}
if (namespace) { %>
package fmq.<%- namespace %>;
<% } else { %>
package fmq;
<% } %>


//////////////////////////////
// Enums
//////////////////////////////

<% for (var i = 0; i < data.enums.length; i++) {
    var en = data.enums[i]
    var plainTypeName = helper.getPlainTypeName(en.typeName) %>

enum <%- plainTypeName %> {<% -%>
<% for (var i = 0; i < en.entries.length; i++) { 
    var entry = en.entries[i] %>
    <%- entry.name %> = <%- entry.id %>;<% -%>
<% } %>
}
<% } %>



//////////////////////////////
// Structs
//////////////////////////////

<% for (var i = 0; i < data.structs.length; i++)
{
    var stru = data.structs[i]
    var plainTypeName = helper.getPlainTypeName(stru.typeName) %>
message <%- plainTypeName %>
{<% -%>
<% for (var n = 0; n < stru.fields.length; n++) { 
        field = stru.fields[n] %>
    <%- helper.typeId2type(data, field.typeId, field.typeName, field.flags) %> <%- field.name %> = <%- (n+1) %>;<% -%>
<% } %>
};
<% } %>


